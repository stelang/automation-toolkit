---
- name: Get self VPC cidr
  ec2_vpc_net_facts:
    region: '{{ aws_region }}'
    profile: '{{ boto_profile }}'
    filters:
      vpc-id: '{{ vpc }}'
  register: vpc_facts

- name: Create Security Group for ELK
  ec2_group:
    name: '{{ boto_profile }}-elk-secgrp'
    region: '{{ aws_region }}'
    description: 'ELK autogenerated by PARM'
    state: present
    profile: '{{ boto_profile }}'
    vpc_id: '{{ vpc }}'
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        group_name: '{{ boto_profile }}-elk-secgrp'
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip:
          - '{{ vpc_facts.vpcs[0].cidr_block }}'
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip:
          - 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip:
          - 0.0.0.0/0
      - proto: tcp
        from_port: 9200
        to_port: 9200
        cidr_ip:
          - '{{ vpc_facts.vpcs[0].cidr_block }}'
          - 0.0.0.0/0
      - proto: tcp
        from_port: 5601
        to_port: 5601
        cidr_ip:
          - 0.0.0.0/0
          - '{{ vpc_facts.vpcs[0].cidr_block }}'

    rules_egress:
      - proto: all
        from_port: -1
        to_port: -1
        cidr_ip: 0.0.0.0/0
  register: '{{ boto_profile }}-elk-secgrp'

- name: Provision an ec2 instance for ELK
  ec2:
    region: '{{ aws_region }}'
    profile: '{{ boto_profile }}'
    key_name: '{{ key_name }}'
    group: '{{ boto_profile }}-elk-secgrp'
    instance_type: m5.xlarge
    image: ami-008ea2adb218c9a79
    volumes:
      - device_name: /dev/xvda
        volume_type: gp2
        volume_size: 200
        delete_on_termination: true
    wait: yes
    wait_timeout: 1800 # in seconds
    exact_count: 1
    vpc_subnet_id: '{{ vpc_subnet_id }}'
    assign_public_ip: no
    termination_protection: true
    monitoring: no
    instance_tags:
      Name: '{{ boto_profile }}-elk-parm'
      env: '{{ env }}'
      Product: '{{ product_name }}'
      parm_elk: 'enabled'
      maid_offhours: 'off'
    count_tag:
      Name: '{{ boto_profile }}-elk-parm'
  register: created_instance

- name: add a Route 53 A record to point to this instance
  route53:
    command: create
    profile: '{{ boto_profile }}'
    zone: '{{ zone }}'
    record: '{{ boto_profile }}-elk.{{ zone }}'
    type: A
    overwrite: true
    value: '{{ created_instance.tagged_instances[0].private_ip }}'
    ttl: 60
    wait: yes
    wait_timeout: 1800
  with_items:
    - '{{ created_instance.tagged_instances }}'

- name: Echo ELK URL
  debug:
    msg: "Your ELK URL is http://{{ boto_profile }}-elk.{{ zone }}:5601 Give it a couple of minutes to fire up"
